{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/AllSpots/AllSpots.js\";\nimport React from \"react\";\nimport \"./AllSpots.css\";\nimport { Link } from \"react-router-dom\";\nimport SpotCard from \"../../components/SpotCard/SpotCard\";\n\nclass AllSpots extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleGetRequest = async () => {\n      const response = await fetch(\"/api/v1/spots\");\n      const data = await response.json();\n      console.log(\"spot\", data);\n      this.props.setSpots(data);\n    };\n  }\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(this.props.spots);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spotGrid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, this.props.spots.map(spot => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SpotCard, {\n        mylat: this.props.distance.latitude,\n        mylng: this.props.distance.longitude,\n        lat: spot.latitude[0],\n        lng: spot.longitude[0],\n        id: spot.id,\n        name: spot.name,\n        img: spot.imageCover,\n        spotType: spot.spotType,\n        slug: spot.slug,\n        ratingsAverage: spot.ratingsAverage,\n        ratingsQuantity: spot.ratingsQuantity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default AllSpots;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/AllSpots/AllSpots.js"],"names":["React","Link","SpotCard","AllSpots","Component","handleGetRequest","response","fetch","data","json","console","log","props","setSpots","componentDidMount","render","spots","map","spot","distance","latitude","longitude","id","name","imageCover","spotType","slug","ratingsAverage","ratingsQuantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,oCAArB;;AAEA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SACrCC,gBADqC,GAClB,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBH,IAApB;AACA,WAAKI,KAAL,CAAWC,QAAX,CAAoBL,IAApB;AACD,KANoC;AAAA;;AAQrCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,gBAAL;AACD;;AAEDU,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWI,KAAvB;AACA,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWI,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;AAC9B,0BACE,uDACE,oBAAC,QAAD;AACE,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,QAD7B;AAEE,QAAA,KAAK,EAAE,KAAKR,KAAL,CAAWO,QAAX,CAAoBE,SAF7B;AAGE,QAAA,GAAG,EAAEH,IAAI,CAACE,QAAL,CAAc,CAAd,CAHP;AAIE,QAAA,GAAG,EAAEF,IAAI,CAACG,SAAL,CAAe,CAAf,CAJP;AAKE,QAAA,EAAE,EAAEH,IAAI,CAACI,EALX;AAME,QAAA,IAAI,EAAEJ,IAAI,CAACK,IANb;AAOE,QAAA,GAAG,EAAEL,IAAI,CAACM,UAPZ;AAQE,QAAA,QAAQ,EAAEN,IAAI,CAACO,QARjB;AASE,QAAA,IAAI,EAAEP,IAAI,CAACQ,IATb;AAUE,QAAA,cAAc,EAAER,IAAI,CAACS,cAVvB;AAWE,QAAA,eAAe,EAAET,IAAI,CAACU,eAXxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAiBD,KAlBA,CADH,CADF,CADF;AAyBD;;AAvCoC;;AA0CvC,eAAezB,QAAf","sourcesContent":["import React from \"react\";\nimport \"./AllSpots.css\";\nimport { Link } from \"react-router-dom\";\nimport SpotCard from \"../../components/SpotCard/SpotCard\";\n\nclass AllSpots extends React.Component {\n  handleGetRequest = async () => {\n    const response = await fetch(\"/api/v1/spots\");\n    const data = await response.json();\n    console.log(\"spot\", data);\n    this.props.setSpots(data);\n  };\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(this.props.spots);\n    return (\n      <>\n        <div className=\"spotGrid\">\n          {this.props.spots.map((spot) => {\n            return (\n              <>\n                <SpotCard\n                  mylat={this.props.distance.latitude}\n                  mylng={this.props.distance.longitude}\n                  lat={spot.latitude[0]}\n                  lng={spot.longitude[0]}\n                  id={spot.id}\n                  name={spot.name}\n                  img={spot.imageCover}\n                  spotType={spot.spotType}\n                  slug={spot.slug}\n                  ratingsAverage={spot.ratingsAverage}\n                  ratingsQuantity={spot.ratingsQuantity}\n                />\n              </>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default AllSpots;\n"]},"metadata":{},"sourceType":"module"}