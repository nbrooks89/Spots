{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/MySpots/MySpots.js\";\nimport React from \"react\";\nimport \"./MySpots.css\";\nimport MySpotCard from \"../../components/MySpotCard/MySpotCard\"; // import Skate from \"../../img/spot-2-cover.jpeg\";\n// import { Container, Row, Col } from \"reactstrap\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass MySpots extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentUser: []\n    };\n\n    this.handleGetRequest = async () => {\n      const res = await fetch(\"/api/v1/users/me\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      this.setState({\n        currentUser: data.data.user.spots\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(\"data\", this.state.currentUser);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.currentUser.map(spot => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MySpotCard, {\n        mylat: this.props.distance.latitude,\n        mylng: this.props.distance.longitude,\n        lat: spot.coordinates[0],\n        lng: spot.coordinates[1],\n        id: spot.id,\n        name: spot.name,\n        img: spot.imageCover,\n        spotType: spot.spotType,\n        slug: spot.slug,\n        ratingsAverage: spot.ratingsAverage,\n        ratingsQuantity: spot.ratingsQuantity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }\n      }));\n    }));\n  }\n\n}\n\nexport default MySpots;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/MySpots/MySpots.js"],"names":["React","MySpotCard","MySpots","Component","state","currentUser","handleGetRequest","res","fetch","method","headers","data","json","console","log","setState","user","spots","componentDidMount","render","map","spot","props","distance","latitude","longitude","coordinates","id","name","imageCover","spotType","slug","ratingsAverage","ratingsQuantity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AACA,OAAOC,UAAP,MAAuB,wCAAvB,C,CACA;AAEA;;AACA,OAAO,sCAAP;;AAEA,MAAMC,OAAN,SAAsBF,KAAK,CAACG,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCC,KADoC,GAC5B;AACNC,MAAAA,WAAW,EAAE;AADP,KAD4B;;AAAA,SAKpCC,gBALoC,GAKjB,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AAC1CC,QAAAA,MAAM,EAAE,KADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAFiC,OAArB,CAAvB;AAMA,YAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAKI,QAAL,CAAc;AAAEV,QAAAA,WAAW,EAAEM,IAAI,CAACA,IAAL,CAAUK,IAAV,CAAeC;AAA9B,OAAd;AACD,KAfmC;AAAA;;AAiBpCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,gBAAL;AACD;;AACDa,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoB,KAAKV,KAAL,CAAWC,WAA/B;AACA,wBACE,0CACG,KAAKD,KAAL,CAAWC,WAAX,CAAuBe,GAAvB,CAA4BC,IAAD,IAAU;AACpC,0BACE,uDACE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAD7B;AAEE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,SAF7B;AAGE,QAAA,GAAG,EAAEJ,IAAI,CAACK,WAAL,CAAiB,CAAjB,CAHP;AAIE,QAAA,GAAG,EAAEL,IAAI,CAACK,WAAL,CAAiB,CAAjB,CAJP;AAKE,QAAA,EAAE,EAAEL,IAAI,CAACM,EALX;AAME,QAAA,IAAI,EAAEN,IAAI,CAACO,IANb;AAOE,QAAA,GAAG,EAAEP,IAAI,CAACQ,UAPZ;AAQE,QAAA,QAAQ,EAAER,IAAI,CAACS,QARjB;AASE,QAAA,IAAI,EAAET,IAAI,CAACU,IATb;AAUE,QAAA,cAAc,EAAEV,IAAI,CAACW,cAVvB;AAWE,QAAA,eAAe,EAAEX,IAAI,CAACY,eAXxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAiBD,KAlBA,CADH,CADF;AAuBD;;AA7CmC;;AAgDtC,eAAe/B,OAAf","sourcesContent":["import React from \"react\";\nimport \"./MySpots.css\";\nimport MySpotCard from \"../../components/MySpotCard/MySpotCard\";\n// import Skate from \"../../img/spot-2-cover.jpeg\";\n\n// import { Container, Row, Col } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass MySpots extends React.Component {\n  state = {\n    currentUser: [],\n  };\n\n  handleGetRequest = async () => {\n    const res = await fetch(\"/api/v1/users/me\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n    console.log(data);\n    this.setState({ currentUser: data.data.user.spots });\n  };\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n  render() {\n    console.log(\"data\", this.state.currentUser);\n    return (\n      <>\n        {this.state.currentUser.map((spot) => {\n          return (\n            <>\n              <MySpotCard\n                mylat={this.props.distance.latitude}\n                mylng={this.props.distance.longitude}\n                lat={spot.coordinates[0]}\n                lng={spot.coordinates[1]}\n                id={spot.id}\n                name={spot.name}\n                img={spot.imageCover}\n                spotType={spot.spotType}\n                slug={spot.slug}\n                ratingsAverage={spot.ratingsAverage}\n                ratingsQuantity={spot.ratingsQuantity}\n              />\n            </>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nexport default MySpots;\n"]},"metadata":{},"sourceType":"module"}