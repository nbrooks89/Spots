{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/UpdateSpot/UpdateSpot.js\";\nimport React from \"react\";\nimport \"./UpdateSpot.css\";\nimport { Form } from \"react-bootstrap\";\n\nclass UpdateSpot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        name: \"\",\n        address: \"\",\n        spotType: \"\",\n        description: \"\",\n        latitude: \"\",\n        longitude: \"\",\n        photo: \"\"\n      }\n    };\n\n    this.handleGetRequest = async () => {\n      const response = await fetch(`/api/v1/spots/${this.props.match.match.params.id}`);\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        form: data.data.spot\n      });\n    };\n\n    this.handleInputChange = event => {\n      let {\n        form\n      } = this.state;\n      form[event.target.id] = event.target.value;\n      this.setState({\n        form: form\n      });\n    };\n\n    this.handleFileChange = event => {\n      let {\n        form\n      } = this.state;\n      [this.state.form.photo] = event.target.files[0];\n      this.setState({\n        form: form\n      });\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const encodedAddress = encodeURI(this.state.form.address);\n      const geodata = await fetch(`https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"google-maps-geocoding.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"3daff95accmshe6470f33432001bp1b0220jsn683860acd393\"\n        }\n      });\n      const dataa = await geodata.json();\n      console.log(\"geodata\", dataa);\n      if (dataa.results.length > 0) this.state.form.address = dataa.results[0].formatted_address;\n      this.state.form.latitude = dataa.results[0].geometry.location.lat;\n      this.state.form.longitude = dataa.results[0].geometry.location.lng;\n      const formData = new FormData();\n      formData.append(\"photo\", this.state.form.photo);\n      formData.append(\"address\", this.state.form.address);\n      formData.append(\"spotType\", this.state.form.spotType);\n      formData.append(\"description\", this.state.form.description);\n      formData.append(\"latitude\", this.state.form.latitude);\n      formData.append(\"longitude\", this.state.form.longitude);\n      formData.append(\"name\", this.state.form.name);\n      const res = await fetch(`/api/v1/spots/${this.props.match.match.params.id}`, {\n        method: \"PATCH\",\n        body: formData\n      });\n      const data = await res.json();\n      console.log(\"patch\", data);\n    };\n  }\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(\"match\", this.props.match.match.params.id);\n    console.log(\"spot details\", this.state.form);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"formm\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Name the Spot\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      defaultValue: this.state.form.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"address\",\n      defaultValue: this.state.form.address,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"longitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"hidden\",\n      name: \"longitude\",\n      defaultValue: this.state.form.longitude,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"latitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"hidden\",\n      name: \"latitude\",\n      defaultValue: this.state.form.latitude,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"spotType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Spot Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: this.state.form.spotType,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"street\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"park\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"textarea\",\n      name: \"description\",\n      defaultValue: this.state.form.description,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.File, {\n      type: \"file\",\n      name: \"photo\",\n      defaultValue: this.state.form.photo,\n      label: \"Example file input\",\n      onChange: this.handleFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UpdateSpot;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/UpdateSpot/UpdateSpot.js"],"names":["React","Form","UpdateSpot","Component","state","form","name","address","spotType","description","latitude","longitude","photo","handleGetRequest","response","fetch","props","match","params","id","data","json","console","log","setState","spot","handleInputChange","event","target","value","handleFileChange","files","onSubmit","preventDefault","encodedAddress","encodeURI","geodata","method","headers","dataa","results","length","formatted_address","geometry","location","lat","lng","formData","FormData","append","res","body","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./UpdateSpot.css\";\n\nimport { Form } from \"react-bootstrap\";\n\nclass UpdateSpot extends React.Component {\n  state = {\n    form: {\n      name: \"\",\n      address: \"\",\n      spotType: \"\",\n      description: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      photo: \"\",\n    },\n  };\n\n  handleGetRequest = async () => {\n    const response = await fetch(\n      `/api/v1/spots/${this.props.match.match.params.id}`\n    );\n    const data = await response.json();\n    console.log(data);\n    this.setState({ form: data.data.spot });\n  };\n\n  handleInputChange = (event) => {\n    let { form } = this.state;\n    form[event.target.id] = event.target.value;\n    this.setState({ form: form });\n  };\n\n  handleFileChange = (event) => {\n    let { form } = this.state;\n    [this.state.form.photo] = event.target.files[0];\n    this.setState({ form: form });\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const encodedAddress = encodeURI(this.state.form.address);\n    const geodata = await fetch(\n      `https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"google-maps-geocoding.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"3daff95accmshe6470f33432001bp1b0220jsn683860acd393\",\n        },\n      }\n    );\n    const dataa = await geodata.json();\n    console.log(\"geodata\", dataa);\n\n    if (dataa.results.length > 0)\n      this.state.form.address = dataa.results[0].formatted_address;\n    this.state.form.latitude = dataa.results[0].geometry.location.lat;\n    this.state.form.longitude = dataa.results[0].geometry.location.lng;\n\n    const formData = new FormData();\n    formData.append(\"photo\", this.state.form.photo);\n    formData.append(\"address\", this.state.form.address);\n    formData.append(\"spotType\", this.state.form.spotType);\n    formData.append(\"description\", this.state.form.description);\n    formData.append(\"latitude\", this.state.form.latitude);\n    formData.append(\"longitude\", this.state.form.longitude);\n    formData.append(\"name\", this.state.form.name);\n\n    const res = await fetch(\n      `/api/v1/spots/${this.props.match.match.params.id}`,\n      {\n        method: \"PATCH\",\n        body: formData,\n      }\n    );\n    const data = await res.json();\n    console.log(\"patch\", data);\n  };\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(\"match\", this.props.match.match.params.id);\n    console.log(\"spot details\", this.state.form);\n\n    return (\n      <div className=\"formContainer\">\n        <Form className=\"formm\" onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name the Spot</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              defaultValue={this.state.form.name}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"address\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"address\"\n              defaultValue={this.state.form.address}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"longitude\">\n            <Form.Label></Form.Label>\n            <Form.Control\n              type=\"hidden\"\n              name=\"longitude\"\n              defaultValue={this.state.form.longitude}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"latitude\">\n            <Form.Label></Form.Label>\n            <Form.Control\n              type=\"hidden\"\n              name=\"latitude\"\n              defaultValue={this.state.form.latitude}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"spotType\">\n            <Form.Label>Spot Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              defaultValue={this.state.form.spotType}\n              onChange={this.handleInputChange}\n            >\n              <option>street</option>\n              <option>park</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"textarea\"\n              name=\"description\"\n              defaultValue={this.state.form.description}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"photo\">\n            <Form.File\n              type=\"file\"\n              name=\"photo\"\n              defaultValue={this.state.form.photo}\n              label=\"Example file input\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Group>\n          {/* <FormGroup>\n          <Label for=\"exampleFile\">File</Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n          <FormText color=\"muted\">\n          This is some placeholder block-level help text for the above input.\n          It's a bit lighter and easily wraps to a new line.\n          </FormText>\n        </FormGroup> */}\n\n          <button>Submit</button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default UpdateSpot;\n"]},"metadata":{},"sourceType":"module"}