{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/Account/Account.js\";\nimport React from \"react\";\nimport \"./Account.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { Container, Col, Form, FormGroup, Label, Input, Button, Alert } from \"reactstrap\";\n\nclass Account extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentName: \"\",\n      currentEmail: \"\",\n      name: \"\",\n      email: \"\",\n      passwordCurrent: \"\",\n      password: \"\",\n      passwordConfirm: \"\",\n      succesfulCreate: false,\n      user: {}\n    };\n\n    this.handleInputChangeData = event => {\n      console.log(event.target.value);\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleInputChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.currentUser = async () => {\n      const res = await fetch(\"/api/v1/users/me\", {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n      this.setState({\n        user: data.data.user\n      });\n    };\n\n    this.onSubmitData = async event => {\n      try {\n        event.preventDefault();\n        const res = await fetch(\"api/v1/users/updateMe\", {\n          method: \"PATCH\",\n          body: JSON.stringify(this.state),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await res.json();\n\n        if (res.ok) {\n          await localStorage.setItem(\"jwt\", data.token);\n          let jwt = await localStorage.getItem(\"jwt\");\n\n          if (jwt) {\n            let user = jwt_decode(jwt);\n            this.props.setUser(user);\n            this.setState({\n              successfulCreate: true\n            });\n          }\n        } else {\n          console.log(data);\n          alert(data.message);\n        } // console.log(this.props.user);\n\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.onSubmitPassword = async event => {\n      try {\n        event.preventDefault();\n        const res = await fetch(\"api/v1/users/updateMyPassword\", {\n          method: \"PATCH\",\n          body: JSON.stringify(this.state),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await res.json();\n        console.log(data);\n\n        if (res.ok) {\n          this.setState({\n            successfulCreate: true\n          });\n        } else {\n          console.log(data);\n          alert(data.message);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.currentUser();\n  }\n\n  render() {\n    if (this.state.successfulCreate) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 14\n        }\n      });\n    }\n\n    console.log(this.state.user);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"updateAccountContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, \"Account Settings\"), /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      onSubmit: this.onSubmitData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"name\",\n      name: \"name\",\n      id: \"name\",\n      defaultValue: this.state.user.name,\n      onChange: this.handleInputChangeData,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      defaultValue: this.state.user.email,\n      onChange: this.handleInputChangeData,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      className: \"updateButton\",\n      type: \"submit\",\n      value: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }\n    })), this.state.errorMessage && /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, \" \", this.state.errorMessage, \" \"), /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      onSubmit: this.onSubmitPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"current Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"passwordCurrent\",\n      name: \"passwordCurrent\",\n      id: \"passwordCurrent\",\n      placeholder: \"************\",\n      value: this.state.passwordCurrent,\n      onChange: this.handleInputChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }, \"New Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"************\",\n      value: this.state.password,\n      onChange: this.handleInputChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"passwordConfirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 15\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"passwordConfirm\",\n      name: \"passwordConfirm\",\n      id: \"passwordConfirm\",\n      placeholder: \"*******\",\n      value: this.state.passwordConfirm,\n      onChange: this.handleInputChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Input, {\n      type: \"submit\",\n      value: \"Update\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Account;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/Account/Account.js"],"names":["React","Redirect","Container","Col","Form","FormGroup","Label","Input","Button","Alert","Account","Component","state","currentName","currentEmail","name","email","passwordCurrent","password","passwordConfirm","succesfulCreate","user","handleInputChangeData","event","console","log","target","value","setState","handleInputChange","currentUser","res","fetch","method","headers","data","json","onSubmitData","preventDefault","body","JSON","stringify","ok","localStorage","setItem","token","jwt","getItem","jwt_decode","props","setUser","successfulCreate","alert","message","err","onSubmitPassword","error","componentDidMount","render","errorMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Account.css\";\nimport { Redirect } from \"react-router-dom\";\n\nimport {\n  Container,\n  Col,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Alert,\n} from \"reactstrap\";\n\nclass Account extends React.Component {\n  state = {\n    currentName: \"\",\n    currentEmail: \"\",\n    name: \"\",\n    email: \"\",\n    passwordCurrent: \"\",\n    password: \"\",\n    passwordConfirm: \"\",\n    succesfulCreate: false,\n    user: {},\n  };\n\n  handleInputChangeData = (event) => {\n    console.log(event.target.value);\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  currentUser = async () => {\n    const res = await fetch(\"/api/v1/users/me\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n    console.log(data);\n    this.setState({ user: data.data.user });\n  };\n\n  onSubmitData = async (event) => {\n    try {\n      event.preventDefault();\n      const res = await fetch(\"api/v1/users/updateMe\", {\n        method: \"PATCH\",\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await res.json();\n\n      if (res.ok) {\n        await localStorage.setItem(\"jwt\", data.token);\n        let jwt = await localStorage.getItem(\"jwt\");\n        if (jwt) {\n          let user = jwt_decode(jwt);\n\n          this.props.setUser(user);\n          this.setState({ successfulCreate: true });\n        }\n      } else {\n        console.log(data);\n        alert(data.message);\n      }\n      // console.log(this.props.user);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  onSubmitPassword = async (event) => {\n    try {\n      event.preventDefault();\n      const res = await fetch(\"api/v1/users/updateMyPassword\", {\n        method: \"PATCH\",\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await res.json();\n      console.log(data);\n      if (res.ok) {\n        this.setState({ successfulCreate: true });\n      } else {\n        console.log(data);\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  componentDidMount() {\n    this.currentUser();\n  }\n\n  render() {\n    if (this.state.successfulCreate) {\n      return <Redirect to=\"/\" />;\n    }\n    console.log(this.state.user);\n    return (\n      <div className=\"updateAccountContainer\">\n        <h1>Account Settings</h1>\n        <Form className=\"form\" onSubmit={this.onSubmitData}>\n          <Col>\n            <FormGroup>\n              <Label for=\"Name\">Name</Label>\n              <Input\n                type=\"name\"\n                name=\"name\"\n                id=\"name\"\n                defaultValue={this.state.user.name}\n                onChange={this.handleInputChangeData}\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"Email\">Email</Label>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                defaultValue={this.state.user.email}\n                onChange={this.handleInputChangeData}\n                required\n              />\n            </FormGroup>\n          </Col>\n\n          <Input className=\"updateButton\" type=\"submit\" value=\"Update\" />\n        </Form>\n        {this.state.errorMessage && (\n          <h3 className=\"error\"> {this.state.errorMessage} </h3>\n        )}\n        <Form className=\"form\" onSubmit={this.onSubmitPassword}>\n          <Col>\n            <FormGroup>\n              <Label>current Password</Label>\n              <Input\n                type=\"passwordCurrent\"\n                name=\"passwordCurrent\"\n                id=\"passwordCurrent\"\n                placeholder=\"************\"\n                value={this.state.passwordCurrent}\n                onChange={this.handleInputChange}\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"password\">New Password</Label>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                id=\"password\"\n                placeholder=\"************\"\n                value={this.state.password}\n                onChange={this.handleInputChange}\n                required\n              />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"passwordConfirm\">Confirm Password</Label>\n              <Input\n                type=\"passwordConfirm\"\n                name=\"passwordConfirm\"\n                id=\"passwordConfirm\"\n                placeholder=\"*******\"\n                value={this.state.passwordConfirm}\n                onChange={this.handleInputChange}\n                required\n              />\n            </FormGroup>\n          </Col>\n\n          <Input type=\"submit\" value=\"Update\" />\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Account;\n"]},"metadata":{},"sourceType":"module"}