{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/Spot/Spot.js\";\nimport React from \"react\";\nimport \"../../pages/Spot/Spot.css\";\nimport Skate from \"../../img/spot-2-cover.jpeg\";\nimport Reviews from \"../../components/Reviews/Reviews\"; // import GoogleMap from \"../../components/Map/Map\";\n// import { Link } from \"react-router-dom\";\n// import DogCard from \"../components/SpotCard\";\n\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getDistance } from \"geolib\";\n\nclass Spot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      spot: {\n        location: {}\n      },\n      reviews: [],\n      details: null\n    };\n\n    this.handleGetRequest = async () => {\n      const response = await fetch(`/api/v1/spots/${this.props.match.params.id}`);\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        spot: data.data.data\n      });\n      this.setState({\n        reviews: data.data.data.reviews\n      });\n      console.log(this.state.reviews);\n    };\n  }\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(\"review\", this.state.reviews);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mainContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, this.state.spot.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"spotImg\",\n      src: Skate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      xsm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"detailsHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, \"Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"Spot Type: \", this.state.spot.spotType), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spot-address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"Address: \", this.props.geoLocation + \"\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spot-rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, \"Rating: \", Math.round(this.state.spot.ratingsAverage * 10) / 10, \" / 5\")), /*#__PURE__*/React.createElement(Col, {\n      xsm: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"descriptionHead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, this.state.spot.description)))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, this.state.reviews.map(review => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Reviews, {\n        createdAt: review.createdAt,\n        review: review.review,\n        rating: review.rating,\n        name: review.user.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default Spot;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/Spot/Spot.js"],"names":["React","Skate","Reviews","Container","Row","Col","getDistance","Spot","Component","state","spot","location","reviews","details","handleGetRequest","response","fetch","props","match","params","id","data","json","console","log","setState","componentDidMount","render","name","spotType","geoLocation","Math","round","ratingsAverage","description","map","review","createdAt","rating","user"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../../pages/Spot/Spot.css\";\nimport Skate from \"../../img/spot-2-cover.jpeg\";\nimport Reviews from \"../../components/Reviews/Reviews\";\n// import GoogleMap from \"../../components/Map/Map\";\n// import { Link } from \"react-router-dom\";\n// import DogCard from \"../components/SpotCard\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { getDistance } from \"geolib\";\n\nclass Spot extends React.Component {\n  state = {\n    spot: { location: {} },\n    reviews: [],\n    details: null,\n  };\n  handleGetRequest = async () => {\n    const response = await fetch(`/api/v1/spots/${this.props.match.params.id}`);\n    const data = await response.json();\n    console.log(data);\n    this.setState({ spot: data.data.data });\n    this.setState({ reviews: data.data.data.reviews });\n    console.log(this.state.reviews);\n  };\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n  render() {\n    console.log(\"review\", this.state.reviews);\n    return (\n      <div className=\"mainContainer\">\n        <div className=\"name\">{this.state.spot.name}</div>\n        <div className=\"container2\">\n          <img className=\"spotImg\" src={Skate} />\n        </div>\n\n        <Container>\n          <Row>\n            <Col xsm=\"6\">\n              <span className=\"detailsHead\">Details</span>\n              <div className=\"type\">Spot Type: {this.state.spot.spotType}</div>\n\n              <div className=\"spot-address\">\n                Address: {this.props.geoLocation + \"\"}\n              </div>\n              <div className=\"spot-rating\">\n                Rating: {Math.round(this.state.spot.ratingsAverage * 10) / 10} /\n                5\n              </div>\n            </Col>\n            <Col xsm=\"6\">\n              <span className=\"descriptionHead\">Description</span>\n              <div className=\"description\">{this.state.spot.description}</div>\n            </Col>\n          </Row>\n        </Container>\n\n        <div>\n          {this.state.reviews.map((review) => {\n            return (\n              <>\n                <Reviews\n                  createdAt={review.createdAt}\n                  review={review.review}\n                  rating={review.rating}\n                  name={review.user.name}\n                />\n              </>\n            );\n          })}\n        </div>\n        {/* <GoogleMap /> */}\n      </div>\n    );\n  }\n}\n\nexport default Spot;\n"]},"metadata":{},"sourceType":"module"}