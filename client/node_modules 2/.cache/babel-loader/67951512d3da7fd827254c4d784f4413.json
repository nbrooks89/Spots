{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/CreateSpot/CreateSpot.js\";\nimport React from \"react\";\nimport \"./CreateSpot.css\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nclass CreateSpot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      address: \"\",\n      select: \"\",\n      description: \"\",\n      coordinates: []\n    };\n\n    this.getUserGeolocationDetails = async () => {\n      var response = await fetch(\"https://geolocation-db.com/json/697de680-a737-11ea-9820-af05f4014d91\");\n      const data = await response.json();\n      console.log(\"dataaa\", data);\n      let latlng = [data.longitude, data.latitude];\n      this.setState({\n        coordinates: latlng\n      });\n    };\n\n    this.handleInputChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = async event => {\n      try {\n        event.preventDefault();\n        const res = await fetch(\"api/v1/spots\", {\n          method: \"POST\",\n          body: JSON.stringify(this.state),\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const data = await res.json();\n        console.log(data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getUserGeolocationDetails();\n  }\n\n  render() {\n    // console.log(\"locationt\", this.state.name);\n    // console.log(this.state.data);\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Name the Spot\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      placeholder: \"Spot Name\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      type: \"hidden\",\n      name: \"address\",\n      id: \"address\",\n      placeholder: \"Spot Address\",\n      value: this.state.coordinates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, \"Spot Type\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"select\",\n      id: \"select\",\n      value: this.state.select,\n      onClick: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, \"street\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"park\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"skatepark\"))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"textarea\",\n      name: \"description\",\n      id: \"description\",\n      value: this.state.description,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n}\n\nexport default CreateSpot;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/CreateSpot/CreateSpot.js"],"names":["React","Button","Form","FormGroup","Label","Input","FormText","CreateSpot","Component","state","name","address","select","description","coordinates","getUserGeolocationDetails","response","fetch","data","json","console","log","latlng","longitude","latitude","setState","handleInputChange","event","value","target","onSubmit","preventDefault","res","method","body","JSON","stringify","headers","err","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./CreateSpot.css\";\nimport { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nclass CreateSpot extends React.Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    select: \"\",\n    description: \"\",\n\n    coordinates: [],\n  };\n\n  getUserGeolocationDetails = async () => {\n    var response = await fetch(\n      \"https://geolocation-db.com/json/697de680-a737-11ea-9820-af05f4014d91\"\n    );\n    const data = await response.json();\n    console.log(\"dataaa\", data);\n    let latlng = [data.longitude, data.latitude];\n    this.setState({ coordinates: latlng });\n  };\n\n  handleInputChange = (event) => {\n    const { value, name } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  //   handleClearForm(e) {\n\n  //     e.preventDefault();\n  //     this.setState({\n  //       newSpot: {\n  //       name: \"\",\n  //       address: \"\",\n  //       select: \"\",\n  //       description: \"\",\n\n  //       },\n  //     })\n  // }\n  onSubmit = async (event) => {\n    try {\n      event.preventDefault();\n      const res = await fetch(\"api/v1/spots\", {\n        method: \"POST\",\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const data = await res.json();\n      console.log(data);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  componentDidMount() {\n    this.getUserGeolocationDetails();\n  }\n\n  render() {\n    // console.log(\"locationt\", this.state.name);\n    // console.log(this.state.data);\n    return (\n      <Form className=\"form\" onSubmit={this.onSubmit}>\n        <FormGroup>\n          <Label for=\"name\">Name the Spot</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Spot Name\"\n            value={this.state.name}\n            onChange={this.handleInputChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"address\"></Label>\n          <Input\n            type=\"hidden\"\n            name=\"address\"\n            id=\"address\"\n            placeholder=\"Spot Address\"\n            value={this.state.coordinates}\n          />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"exampleSelect\">Spot Type</Label>\n          <Input\n            type=\"select\"\n            name=\"select\"\n            id=\"select\"\n            value={this.state.select}\n            onClick={this.handleInputChange}\n          >\n            <option value=\"street\">street</option>\n            <option value=\"park\">skatepark</option>\n          </Input>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"description\">Description</Label>\n          <Input\n            type=\"textarea\"\n            name=\"description\"\n            id=\"description\"\n            value={this.state.description}\n            onChange={this.handleInputChange}\n          />\n        </FormGroup>\n        {/* <FormGroup>\n          <Label for=\"exampleFile\">File</Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n          <FormText color=\"muted\">\n            This is some placeholder block-level help text for the above input.\n            It's a bit lighter and easily wraps to a new line.\n          </FormText>\n        </FormGroup> */}\n\n        <Button>Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default CreateSpot;\n"]},"metadata":{},"sourceType":"module"}