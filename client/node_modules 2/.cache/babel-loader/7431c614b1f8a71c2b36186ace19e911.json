{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/CreateSpot/CreateSpot.js\";\nimport React from \"react\";\nimport \"./CreateSpot.css\"; // import { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\n\nimport { Form, Button } from \"react-bootstrap\";\n\nclass CreateSpot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"\",\n      address: \"\",\n      select: \"\",\n      description: \"\",\n      coordinates: []\n    };\n\n    this.getUserGeolocationDetails = async () => {\n      var response = await fetch(\"https://geolocation-db.com/json/697de680-a737-11ea-9820-af05f4014d91\");\n      const data = await response.json();\n      console.log(\"dataaa\", data);\n      let latlng = [data.longitude, data.latitude];\n      this.setState({\n        coordinates: latlng\n      });\n    };\n\n    this.handleInputChange = event => {\n      // const { value, name } = event.target;\n      console.log(event.target.id);\n      this.setState({\n        [event.target.id]: event.target.value\n      }); // this.setState({\n      //   [name]: value,\n      // });\n    };\n\n    this.onSubmit = async event => {\n      console.log(\"test\");\n      console.log(this.state.select);\n      event.preventDefault();\n      const res = await fetch(\"api/v1/spots\", {\n        method: \"POST\",\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await res.json();\n      console.log(data);\n    };\n  }\n\n  componentDidMount() {\n    this.getUserGeolocationDetails();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Name the Spot\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Spot Name\",\n      value: this.state.name,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formAddress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"hidden\",\n      name: \"address\",\n      placeholder: \"Spot Address\",\n      value: this.state.coordinates,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Spot Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.select,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"street\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, \"street\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"park\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, \"skatepark\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"textarea\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default CreateSpot;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/CreateSpot/CreateSpot.js"],"names":["React","Form","Button","CreateSpot","Component","state","name","address","select","description","coordinates","getUserGeolocationDetails","response","fetch","data","json","console","log","latlng","longitude","latitude","setState","handleInputChange","event","target","id","value","onSubmit","preventDefault","res","method","body","JSON","stringify","headers","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./CreateSpot.css\";\n// import { Button, Form, FormGroup, Label, Input, FormText } from \"reactstrap\";\nimport { Form, Button } from \"react-bootstrap\";\nclass CreateSpot extends React.Component {\n  state = {\n    name: \"\",\n    address: \"\",\n    select: \"\",\n    description: \"\",\n\n    coordinates: [],\n  };\n\n  getUserGeolocationDetails = async () => {\n    var response = await fetch(\n      \"https://geolocation-db.com/json/697de680-a737-11ea-9820-af05f4014d91\"\n    );\n    const data = await response.json();\n    console.log(\"dataaa\", data);\n    let latlng = [data.longitude, data.latitude];\n    this.setState({ coordinates: latlng });\n  };\n\n  handleInputChange = (event) => {\n    // const { value, name } = event.target;\n    console.log(event.target.id);\n    this.setState({ [event.target.id]: event.target.value });\n    // this.setState({\n    //   [name]: value,\n    // });\n  };\n\n  //   handleClearForm(e) {\n\n  //     e.preventDefault();\n  //     this.setState({\n  //       newSpot: {\n  //       name: \"\",\n  //       address: \"\",\n  //       select: \"\",\n  //       description: \"\",\n\n  //       },\n  //     })\n  // }\n  onSubmit = async (event) => {\n    console.log(\"test\");\n    console.log(this.state.select);\n    event.preventDefault();\n    const res = await fetch(\"api/v1/spots\", {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const data = await res.json();\n    console.log(data);\n  };\n  componentDidMount() {\n    this.getUserGeolocationDetails();\n  }\n\n  render() {\n    return (\n      <div>\n        <Form className=\"form\" onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name the Spot</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Spot Name\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formAddress\">\n            <Form.Label></Form.Label>\n            <Form.Control\n              type=\"hidden\"\n              name=\"address\"\n              placeholder=\"Spot Address\"\n              value={this.state.coordinates}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"select\">\n            <Form.Label>Spot Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={this.state.select}\n              onChange={this.handleInputChange}\n            >\n              <option value=\"street\">street</option>\n              <option value=\"park\">skatepark</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"textarea\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          {/* <FormGroup>\n          <Label for=\"exampleFile\">File</Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n          <FormText color=\"muted\">\n            This is some placeholder block-level help text for the above input.\n            It's a bit lighter and easily wraps to a new line.\n          </FormText>\n        </FormGroup> */}\n\n          <button>Submit</button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default CreateSpot;\n"]},"metadata":{},"sourceType":"module"}