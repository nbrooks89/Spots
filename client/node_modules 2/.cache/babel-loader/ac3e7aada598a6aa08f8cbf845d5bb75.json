{"ast":null,"code":"var _jsxFileName = \"/Users/nicolebrooks/Desktop/spots-front/src/pages/UpdateSpot/UpdateSpot.js\";\nimport React from \"react\";\nimport \"./UpdateSpot.css\";\nimport { Form } from \"react-bootstrap\";\n\nclass UpdateSpot extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editedSpot: {}\n    };\n\n    this.handleGetRequest = async () => {\n      const response = await fetch(`/api/v1/spots/${this.props.match.match.params.id}`);\n      const data = await response.json();\n      console.log(data);\n      this.setState({\n        editedSpot: data.data.spot\n      });\n    };\n\n    this.handleInputChange = event => {\n      console.log(event.target.id);\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n    };\n\n    this.handleFileChange = event => {\n      console.log(event.target.files[0]);\n      this.setState({\n        photo: event.target.files[0]\n      });\n    };\n\n    this.onSubmit = async event => {\n      event.preventDefault();\n      const encodedAddress = encodeURI(this.state.address);\n      const geodata = await fetch(`https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`, {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"google-maps-geocoding.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"3daff95accmshe6470f33432001bp1b0220jsn683860acd393\"\n        }\n      });\n      const dataa = await geodata.json();\n      console.log(\"geodata\", dataa);\n      if (dataa.results.length > 0) this.setState({\n        address: dataa.results[0].formatted_address\n      });\n      this.setState({\n        latitude: dataa.results[0].geometry.location.lat\n      });\n      this.setState({\n        longitude: dataa.results[0].geometry.location.lng\n      });\n      const newPost = {\n        name: this.state.name,\n        address: this.state.address,\n        spotType: this.state.spotType,\n        description: this.state.description,\n        latitude: this.state.latitude,\n        longitude: this.state.longitude,\n        photo: this.state.photo\n      };\n      console.log(newPost);\n      const formData = new FormData();\n      formData.append(\"photo\", this.state.photo);\n      formData.append(\"address\", this.state.address);\n      formData.append(\"spotType\", this.state.spotType);\n      formData.append(\"description\", this.state.description);\n      formData.append(\"latitude\", this.state.latitude);\n      formData.append(\"longitude\", this.state.longitude);\n      formData.append(\"name\", this.state.name);\n      const res = await fetch(`/api/v1/spots/${this.props.match.match.params.id}`, {\n        method: \"PATCH\",\n        body: formData\n      });\n      const data = await res.json();\n      console.log(\"patch\", data);\n    };\n  }\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(\"match\", this.props.match.match.params.id);\n    console.log(\"spot details\", this.state.editedSpot);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"formm\",\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Name the Spot\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"name\",\n      defaultValue: this.state.editedSpot.name //   value={this.state.name}\n      ,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      name: \"address\" //   placeholder={this.props.spotDetails.address}\n      ,\n      value: this.state.address,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"longitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"hidden\",\n      name: \"longitude\",\n      value: this.state.longitude,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"latitude\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"hidden\",\n      name: \"latitude\",\n      value: this.state.latitude,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"spotType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Spot Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: this.state.spotType,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"street\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, \"park\"))), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"textarea\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"photo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.File, {\n      type: \"file\",\n      name: \"photo\",\n      label: \"Example file input\",\n      onChange: this.handleFileChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default UpdateSpot;","map":{"version":3,"sources":["/Users/nicolebrooks/Desktop/spots-front/src/pages/UpdateSpot/UpdateSpot.js"],"names":["React","Form","UpdateSpot","Component","state","editedSpot","handleGetRequest","response","fetch","props","match","params","id","data","json","console","log","setState","spot","handleInputChange","event","target","value","handleFileChange","files","photo","onSubmit","preventDefault","encodedAddress","encodeURI","address","geodata","method","headers","dataa","results","length","formatted_address","latitude","geometry","location","lat","longitude","lng","newPost","name","spotType","description","formData","FormData","append","res","body","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./UpdateSpot.css\";\n\nimport { Form } from \"react-bootstrap\";\n\nclass UpdateSpot extends React.Component {\n  state = {\n    editedSpot: {},\n  };\n\n  handleGetRequest = async () => {\n    const response = await fetch(\n      `/api/v1/spots/${this.props.match.match.params.id}`\n    );\n    const data = await response.json();\n    console.log(data);\n    this.setState({ editedSpot: data.data.spot });\n  };\n\n  handleInputChange = (event) => {\n    console.log(event.target.id);\n    this.setState({ [event.target.id]: event.target.value });\n  };\n\n  handleFileChange = (event) => {\n    console.log(event.target.files[0]);\n    this.setState({ photo: event.target.files[0] });\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    const encodedAddress = encodeURI(this.state.address);\n    const geodata = await fetch(\n      `https://google-maps-geocoding.p.rapidapi.com/geocode/json?language=en&address=${encodedAddress}`,\n      {\n        method: \"GET\",\n        headers: {\n          \"x-rapidapi-host\": \"google-maps-geocoding.p.rapidapi.com\",\n          \"x-rapidapi-key\":\n            \"3daff95accmshe6470f33432001bp1b0220jsn683860acd393\",\n        },\n      }\n    );\n    const dataa = await geodata.json();\n    console.log(\"geodata\", dataa);\n    if (dataa.results.length > 0)\n      this.setState({ address: dataa.results[0].formatted_address });\n    this.setState({ latitude: dataa.results[0].geometry.location.lat });\n    this.setState({ longitude: dataa.results[0].geometry.location.lng });\n    const newPost = {\n      name: this.state.name,\n      address: this.state.address,\n      spotType: this.state.spotType,\n      description: this.state.description,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      photo: this.state.photo,\n    };\n    console.log(newPost);\n\n    const formData = new FormData();\n    formData.append(\"photo\", this.state.photo);\n    formData.append(\"address\", this.state.address);\n    formData.append(\"spotType\", this.state.spotType);\n    formData.append(\"description\", this.state.description);\n    formData.append(\"latitude\", this.state.latitude);\n    formData.append(\"longitude\", this.state.longitude);\n    formData.append(\"name\", this.state.name);\n\n    const res = await fetch(\n      `/api/v1/spots/${this.props.match.match.params.id}`,\n      {\n        method: \"PATCH\",\n        body: formData,\n      }\n    );\n    const data = await res.json();\n    console.log(\"patch\", data);\n  };\n\n  componentDidMount() {\n    this.handleGetRequest();\n  }\n\n  render() {\n    console.log(\"match\", this.props.match.match.params.id);\n    console.log(\"spot details\", this.state.editedSpot);\n\n    return (\n      <div className=\"formContainer\">\n        <Form className=\"formm\" onSubmit={this.onSubmit}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name the Spot</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              defaultValue={this.state.editedSpot.name}\n              //   value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"address\">\n            <Form.Label>Address</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"address\"\n              //   placeholder={this.props.spotDetails.address}\n              value={this.state.address}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"longitude\">\n            <Form.Label></Form.Label>\n            <Form.Control\n              type=\"hidden\"\n              name=\"longitude\"\n              value={this.state.longitude}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"latitude\">\n            <Form.Label></Form.Label>\n            <Form.Control\n              type=\"hidden\"\n              name=\"latitude\"\n              value={this.state.latitude}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"spotType\">\n            <Form.Label>Spot Type</Form.Label>\n            <Form.Control\n              as=\"select\"\n              value={this.state.spotType}\n              onChange={this.handleInputChange}\n            >\n              <option>street</option>\n              <option>park</option>\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              type=\"textarea\"\n              name=\"description\"\n              value={this.state.description}\n              onChange={this.handleInputChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"photo\">\n            <Form.File\n              type=\"file\"\n              name=\"photo\"\n              label=\"Example file input\"\n              onChange={this.handleFileChange}\n            />\n          </Form.Group>\n          {/* <FormGroup>\n          <Label for=\"exampleFile\">File</Label>\n          <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n          <FormText color=\"muted\">\n          This is some placeholder block-level help text for the above input.\n          It's a bit lighter and easily wraps to a new line.\n          </FormText>\n        </FormGroup> */}\n\n          <button>Submit</button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default UpdateSpot;\n"]},"metadata":{},"sourceType":"module"}